#!/usr/bin/env bash
#
# 1. Load source modules
#

# function to validate core2 dependencies and pre-reqs.
source scripts/dependencyCheck.sh

# function to deploy Kubernetes configurations, dep., svc., etc.
source scripts/deployK8SComponents.sh

# function to get context for kubectl
source scripts/getContext.sh

# function to parse arguments
source scripts/parseArgs.sh

# function to process each argument
source scripts/clustctl/processArgument.sh

# function to ask user if they want to continue
source scripts/processContinue.sh

# function to remove Kubernetes configurations
source scripts/removeK8SComponents.sh

# function to set default values for variables
source scripts/clustctl/setDefaults.sh

# function to define the imperative commands needed to apply
# or delete kubernets objects.
source scripts/setImperatives.sh

# function to set vendor specific information (e.g. paths, etc.)
source scripts/setVendorSpecifics.sh

# function to show the configuration that will be deployed
source scripts/showConfig.sh

# function to handle errors
source scripts/showError.sh

# function to show help
source scripts/clustctl/showHelp.sh

# function to show welcome message
source scripts/showWelcome.sh


#
# 2. Show welcome message
#
showWelcome


#
# 3. Set defaults and initialize variables
#
setDefaults


#
# 4. Parse command line arguments
#
parseArgs


#
# 5. Process each argument, validate it, and act on it.
#
while true; do
    processArgument $1 $2
    if (( $? == 3 )); then break; fi
    shift $SHIFT_AMOUNT
done


#
# 6. Check dependencies
#
dependencyCheck


#
# 7. Compute specific variable for each vendor
#
setVendorSpecifics


#
# 8. Show the welcome message. Differs based on tear down or instantiate
#    actions.
#
echo "|------------------------------------------------------------------|" >&2
if (( $TEARDOWN == 1 ))
then
    echo "|                                                                  |" >&2
    echo "| Tearing down Python Cowbull suite                                |" >&2
    echo "|                                                                  |" >&2
    echo "| WARNING! WARNING! WARNING!                                       |" >&2
    echo "| This step cannot be cancelled or reverted after confirming the   |" >&2
    echo "| operation below.                                                 |" >&2
    echo "|                                                                  |" >&2
else
    echo "| Deploying Python Cowbull suite                                   |" >&2
fi
echo "|------------------------------------------------------------------|" >&2


#
# 9. Validate vendor prereqs
#
echo >&2
echo "Validating environment and prerequisites" >&2
echo "----------------------------------------" >&2
echo >&2
. $VENDOR_PATH/validate.sh
return_status=$?
if (( $return_status != 0 ))
then
    showError "Error" 7 "Vendor validation for prerequisites failed."

    processContinue
    if (( $? != 1 )); then echo >&2; exit 0; fi

    # User accepted to continue, so set quiet so that they are not
    # prompted twice.
    QUIET=1
fi


#
# 10. Output the configuration to the user
#
showConfig


#
# 12. If not in quiet mode, confirm the action with the user because it
#    is dangerous and not revertable.
#

# Check quiet is defined, if it's not, set it to no
if [[ $QUIET"X" == "X" ]]; then QUIET=0; fi

if (( $QUIET != 1 ))
then
    processContinue
    if (( $? != 1 )); then echo >&2; exit 0; fi
fi


#
# 13. Check if tear down or instantiate cluster
#
if (( $TEARDOWN == 1 ))
then
    . $VENDOR_PATH/teardown
else
    . $VENDOR_PATH/spinup
fi


echo
echo "Done."
echo

exit 0
