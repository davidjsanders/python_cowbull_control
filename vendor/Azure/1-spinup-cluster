#!/usr/bin/env bash
source ../../scripts/setup_variables
#
# ERROR CHECKING *BEFORE* EXECUTION STARTS
#
# Check azure cli 2.0 is installed
#
echo ""
echo "Deploy CowBull game to Kubernetes cluster running on Azure"
echo "=========================================================="
echo ""
echo "|------------------------------------|----| "
echo "| Validate environment               | ?? |"
echo "|------------------------------------|----| "

azpath=$(which az)"x"
echo -n "| azure cli is installed             | "
if [[ $azpath == "x"  ]]
then
    echo
    echo ""
    echo "Error; the Azure CLI (version 2.0+) must be installed. "
    echo "See https://docs.microsoft.com/en-us/cli/azure/install-azure-cli?view=azure-cli-latesti "
    echo ""
    exit 1
fi
echo "ok |"

echo -n "| private key is available           | "
if [ ! -f ~/.ssh/id_rsa ]
then
    echo
    echo ""
    echo "Error; there is no id_rsa private key in the .ssh subdirectory"
    echo "You need to create it. Do the following:"
    echo ""
    echo "1. cd ~/.ssh"
    echo "2. ssh-keygen -b 4096 -t rsa"
    echo ""
    echo "(In step 2, make sure to accept the default id_rsa)"
    echo ""
    exit 1
fi
echo "ok |"

echo -n "| Checking group does not exist      | "
groupCheck=$(az group list --query '[?name==`$rg`]|[?location==`$location`].name' --output tsv)"x"
if [[ $groupCheck != "x" ]]
then
    echo
    echo ""
    echo "Error; the group ("$rg") in location "$location" already exists!"
    echo "Remove the group before proceeding"
    echo ""
    exit 1
fi
echo "ok |"

echo -n "| Checking ssh is running correctly  | "
sshAgent=$(ps -ef | grep "ssh-agent" | grep -v grep)"x"
if [[ $sshAgent == "x" ]]
then
    echo
    echo ""
    echo "Error; ssh is not running. Run the following command before running..."
    echo "eval "$(ssh-agent -s)""
    echo ""
    exit 1
fi
echo "ok |"

echo "|------------------------------------|----| "
echo ""
echo "Configuration will be set as follows:"
echo "-------------------------------------"
echo ""
echo "resource group:   "$rg
echo "cluster name  :   "$clusterName
echo "master count  :   "$masters
echo "agent count   :   "$agents
echo "location      :   "$location
echo "machine type  :   "$machineType
echo "dns prefix    :   "$dnsPrefix
echo "cowbull dns   :   "$publicIpDNS"."$dnsPrefix"."$location".cloudapp.azure.com"
echo "private key   :   "$keyfile
echo ""
read -p "Continue (y for yes, anything else to quit)? " -n 1 -r
echo ""
if [[ ! $REPLY =~ ^[Yy]$ ]]
then
    echo "Exiting".
    exit 0
fi
echo ""
echo "1. Create the resource group"$rg
echo ""
az group create --name $rg --location $location
echo ""
echo "2. Create the cluster. --resource-group "$rg" --name "$clusterName" --agent-count "$agents" --agent-vm-size "$machineType
az aks create \
  --resource-group $rg \
  --name $clusterName \
  --generate-ssh-keys \
  --agent-count $agents \
  --agent-vm-size $machineType
echo ""
echo "3. Add your private key ("$keyfile")"
ssh-add -k $keyfile
echo ""
echo "4. Get kubernetes credentials to configure kubectl"
az aks get-credentials --resource-group=$rg --name=$clusterName
echo ""
echo ""
echo "Done."
echo ""
echo "Next steps:"
echo "1. Wait for the cluster to be ready > kubectl get nodes --watch"
echo "2. Run step 2 to deploy services    > ./2-deploy-services"
echo ""
echo "When you're done:"
echo "1. Run step 3 to remove services    > ./3-remove-services"
echo "2. Run the teardown script          > ./4-spindown-cluster"
echo "3. Verify the group is cleared      > az group list"
echo ""
