#!/usr/bin/env bash
USAGE_STRING="usage: deploy [-abcdghlmnpqrtADGKFSCT] [-a|--agents agent count] [-b|--disk-size disk size (Google only)]"
USAGE_STRING=$USAGE_STRING" [-c|--mini-cpu number of cpus (Minikube only)] [-g|--group group name] "
USAGE_STRING=$USAGE_STRING" [-l|--location location (Azure location/Google zone)] [-m|--masters master count (deprecated)]"
USAGE_STRING=$USAGE_STRING" [-n|--dns-name dns name] [-p|--pip-name public IP name] "
USAGE_STRING=$USAGE_STRING" [-r|--mini-ram ram (Minikube only)] [-t|--machine-type machine type (Azure and Google)]"

source scripts/v2/showHelp.sh
source scripts/v2/showInfo.sh
source scripts/v2/removeK8SComponents.sh
source scripts/v2/deployK8SComponents.sh
source scripts/v2/showConfig.sh
source scripts/v2/deployInfrastructure.sh
source scripts/v2/deployServices.sh
source scripts/v2/tearDown.sh


#TODO -> Use the variables to making understanding the options easier
OPTIONS=dfo:vm:
LONGOPTIONS=debug,force,output:,verbose

PARSED=$(\
  getopt \
  --options=ACDFGSTc:r:b:t:p:n:qdhg:m:a:l:k \
  --long=debug,tear-down,deploy-cluster,deploy-all,deploy-services,mini-cpu:,mini-ram:,disk-size:,minikube,pip-name:,dns-name:,machine-type:,quiet,dry-run,azure,google,group:,masters:,agents:,location: \
  --name "Cowbull deployment script" \
  -- "$@"\
)

if [ $? != 0 ];
then
    showHelp
    exit 1
fi

EXEAZURE=0
EXEGOOGLE=0
EXEMINIKUBE=0
DATEFILL=$(date +"%m%d%y")
GROUP="k8"${DATEFILL}"RG"
MASTER_COUNT=1
AGENT_COUNT=1
LOCATION="westus2"
MACHINE_TYPE="Standard_A2"
DNS_PREFIX="dnsprefix"
PIP_NAME="cowbull_webapp"
DEBUG=0
DRYRUN=0
KEYFILE=~/.ssh/id_rsa
QUIET=0
START_AT=1
DISK_SIZE=100
MINIRAM=5192
MINICPU=4
DEPLOYCLUSTER=0
DEPLOYSERVICES=0
DEPLOYFULL=1
TEARDOWN=0

while true; do
    case "$1" in
        -h|--help)
            showHelp
            exit 1
            ;;
        -s|--start-at)
            START_AT=$2
            shift 2
            ;;
        -b|--disk-size)
            DISK_SIZE=$2
            shift 2
            ;;
        -q|--quiet)
            QUIET=1
            shift
            ;;
        -p|--pip-name)
            PIP_NAME=$2
            shift 2
            ;;
        -r|--mini-ram)
            MINIRAM=$2
            shift 2
            ;;
        -c|--mini-cpu)
            MINICPU=$2
            shift 2
            ;;
        -n|--dns-name)
            DNS_PREFIX=$2
            shift 2
            ;;
        -t|--machine-type)
            MACHINE_TYPE=$2
            shift 2
            ;;
        -l|--location)
            LOCATION=$2
            shift 2
            ;;
        -m|--masters)
            MASTER_COUNT=$2
            shift 2
            ;;
        -a|--agents)
            AGENT_COUNT=$2
            shift 2
            ;;
        -d|--debug)
            DEBUG=1
            shift
            ;;
        -A|--azure)
            EXEAZURE=1
            shift
            ;;
        -G|--google)
            EXEGOOGLE=1
            shift
            ;;
        -K|--minikube)
            EXEMINIKUBE=1
            shift
            ;;
        -C|--deploy-cluster)
            DEPLOYCLUSTER=1
            DEPLOYFULL=0
            shift
            ;;
        -S|--deploy-services)
            DEPLOYSERVICES=1
            DEPLOYFULL=0
            shift
            ;;
        -F|--deploy-all)
            DEPLOYCLUSTER=0
            DEPLOYSERVICES=0
            DEPLOYFULL=1
            shift
            ;;
        -T|--tear-down)
            TEARDOWN=1
            shift
            ;;
        -D|--dry-run)
            DRYRUN=1
            shift
            ;;
        -g|--group)
            GROUP=$2
            shift 2
            ;;
        --|\ )
            shift
            break
            ;;
        \?)
            shift
            ;;
        *)
            if [[ $1"X" != "X" ]];
            then
                echo "Unexpected argument: ${1}"
            fi
            break
            ;;
    esac
done

echo >&2
echo "|------------------------------------------------------------------|" >&2
if (( $TEARDOWN == 1 ))
then
    echo "|                                                                  |" >&2
    echo "| Tearing down the Python Cowbull suite with the following options |" >&2
    echo "|                                                                  |" >&2
    echo "| WARNING! WARNING! WARNING!                                       |" >&2
    echo "| !! This step cannot be cancelled or reverted !!                  |" >&2
    echo "|                                                                  |" >&2
else
    echo "| Deploying Python Cowbull suite with the following options        |" >&2
fi
echo "|------------------------------------------------------------------|" >&2

CLUSTER=${GROUP}"cluster"
AUTOGROUP="MC_"${GROUP}"_"${CLUSTER}"_"${LOCATION}

showConfig

if [[ $QUIET != 1 ]]
then
    read -p "Continue (y for yes, anything else to quit)? " -n 1 -r
    echo "" >&2
    if [[ ! $REPLY =~ ^[Yy]$ ]]
    then
        echo >&2
        exit 0
    fi
fi

if (( $TEARDOWN == 1 ))
then
    tearDown
else
    if (( $DEPLOYCLUSTER == 1 || $DEPLOYFULL == 1 ))
    then
        deployInfrastructure
        echo >&2
    fi

    if (( $DEPLOYSERVICES == 1 || $DEPLOYFULL == 1 ))
    then
        deployServices
        echo >&2
    fi
fi

echo
echo "Done."
echo

exit 0
