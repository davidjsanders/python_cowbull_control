#!/usr/bin/env bash
#
# 1. Load source modules
#
source scripts/v2/showHelp.sh
source scripts/v2/showInfo.sh
source scripts/v2/removeK8SComponents.sh
source scripts/v2/deployK8SComponents.sh
source scripts/v2/showConfig.sh
source scripts/v2/deployInfrastructure.sh
source scripts/v2/deployServices.sh
source scripts/v2/tearDownCluster.sh
source scripts/v2/tearDownServices.sh
source scripts/v2/parseArgs.sh
source scripts/v2/processArgument.sh
source scripts/v2/showTeardown.sh
source scripts/v2/showSpinup.sh
source scripts/v2/processContinue.sh
source scripts/v2/setDefaults.sh

#
# 2. Set defaults and initialize variables
#
setDefaults

#
# 3. Parse command line arguments
#
parseArgs
if [ $? != 0 ];
then
    showHelp
    exit 1
fi

#
# 4. Process each argument, validate it, and act on it.
#
while true; do
    processArgument $1 $2
    return_status=$?
    if (( $return_status == 1 ))
    then
        echo >&2
        echo "ERROR: "${ERROR_TEXT} >&2
        echo "       Cannot continue." >&2
        echo "       deploy --help to show command line options" >&2
        echo >&2
        exit $?
    elif (( $return_status == 2 ))
    then
        exit 0
    elif (( $return_status == 3 ))
    then
        break
    fi
    shift $SHIFT_AMOUNT
done

#
# 5. Show the welcome message. Differs based on tear down or instantiate
#    actions.
#
if (( $TEARDOWN == 1 ))
then
    showTeardown
else
    showSpinup
fi

#
# 6. Compute specific variable for Azure
#
CLUSTER=${GROUP}"cluster"
AUTOGROUP="MC_"${GROUP}"_"${CLUSTER}"_"${LOCATION}

#
# 7. Output the configuration to the user
#
showConfig

#
# 8. If not in quiet mode, confirm the action with the user because it
#    is dangerous and not revertable.
#
if [[ $QUIET != 1 ]]
then
    processContinue
    if (( $? != 1 ))
    then
        echo >&2
        exit 0
    fi
fi

#
# 9. User has confirmed action or we are in quiet mode, so proceed.
#

#
# 10. Check if tear down or instantiate
#
if (( $TEARDOWN == 1 ))
then
    if (( $DEPLOYSERVICES == 1 || $DEPLOYFULL == 1 ))
    then
        tearDownServices
    fi
    if (( $DEPLOYCLUSTER == 1 || $DEPLOYFULL == 1 ))
    then
        tearDownCluster
    fi
else
    #
    # 10a. Check if this is a full deploy or ONLY the cluster.
    #
    if (( $DEPLOYCLUSTER == 1 || $DEPLOYFULL == 1 ))
    then
        deployInfrastructure
        echo >&2
    fi

    #
    # 10b. Check if this is a full deploy or ONLY the services.
    #      NOTE: This assumes there is a K8S infrastructure ready
    #            to deploy the pods and services to.
    #
    if (( $DEPLOYSERVICES == 1 || $DEPLOYFULL == 1 ))
    then
        deployServices
        echo >&2
    fi
fi

#
# 11. Done.
#
echo
echo "Done."
echo

exit 0
